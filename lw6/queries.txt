1) 4.1. LEFT JOIN двух таблиц + WHERE по 1 атрибуту
Текстовое описание какие данные хотим получить: 
Получить список кинотеатров и свободных мест, где свободных мест > 70

SQL запрос:
SELECT c.cinema_id, c.cinema_name, ch.place_count
FROM cinema c
LEFT JOIN cinema_hall ch ON c.cinema_id = ch.cinema_id
WHERE ch.place_count > 70

План/Explain:
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	ch	range	cinema_id,place_count	place_count	4	NULL	2209	Using where
1	SIMPLE	c	eq_ref	PRIMARY	PRIMARY	4	cinema.ch.cinema_id	1	
		
2) RIGHT JOIN двух таблиц, получить те же записи как в 4.1.
Текстовое описание какие данные хотим получить: 
Получить список кинотеатров и свободных мест, где свободных мест > 50

SQL запрос:
SELECT c.cinema_id, c.cinema_name, ch.place_count
FROM cinema c
RIGHT JOIN cinema_hall ch ON c.cinema_id = ch.cinema_id
WHERE ch.place_count > 50

План/Explain:
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	ch	range	place_count	place_count	4	NULL	2209	Using where
1	SIMPLE	c	eq_ref	PRIMARY	PRIMARY	4	cinema.ch.cinema_id	1		

3) 4.3. LEFT JOIN двух таблиц + WHERE по 2 атрибутам из 1 таблицы 
Текстовое описание какие данные хотим получить: 
Список фильмов и длительность проката, где ид фильмов в диапазоне >18000 и продолжительность фильмов > 120

SQL запрос:
EXPLAIN SELECT DISTINCT (
f.film_id
), f.film_name, DATEDIFF( fr.date_end, fr.date_start ) AS rent_duration
FROM film f
LEFT JOIN film_rent fr ON f.film_id = fr.film_id
WHERE f.film_id >18000
AND f.film_duration >120
AND fr.date_start IS NOT NULL 
AND fr.date_end IS NOT NULL 
ORDER BY fr.date_start ASC

План/Explain:
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	fr	range	film_id	film_id	4	NULL	1847	Using where; Using temporary; Using filesort
1	SIMPLE	f	eq_ref	PRIMARY,film_duration	PRIMARY	4	cinema.fr.film_id	1	Using where

4) 4.4. LEFT JOIN двух таблиц + WHERE по 1 атрибуту из каждой таблицы 
Текстовое описание какие данные хотим получить: 
Список фильмов продолжительностью < 120 минут и те, дата проката которых начинается сегодня по 19 мая 2018 года

SQL запрос:
SELECT f. * , fr.date_start
FROM film f
LEFT JOIN film_rent fr ON f.film_id = fr.film_id
WHERE fr.date_start > 
CURRENT_TIMESTAMP AND fr.date_start <=  '2018-05-19'
AND f.film_duration <120
ORDER BY fr.date_start ASC
	
План/Explain:
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	fr	range	film_id,date_start	date_start	3	NULL	504	Using where
1	SIMPLE	f	eq_ref	PRIMARY,film_duration	PRIMARY	4	cinema.fr.film_id	1	Using where

5) 4.4. Подзапрос с IN
Текстовое описание какие данные хотим получить: 
Получить список фильмов по алфавиту на букву 'a', дата проката которых началась

SQL запрос:
SELECT DISTINCT(f.film_name) FROM `film` as f 
WHERE film_id IN(SELECT film_id FROM film_rent WHERE CURRENT_TIMESTAMP < date_start)
AND f.film_name LIKE 'a%'
ORDER BY f.film_name ASC

План/Explain:
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	f	range	film_name	film_name	102	NULL	2879	Using where; Using index
2	DEPENDENT SUBQUERY	film_rent	index_subquery	film_id,date_start	film_id	4	func	85	Using where

6)4.5. Подзапрос с одним из операторов (= > < >= <= <> != <=> LIKE)
Текстовое описание какие данные хотим получить: 
Получить идентификаторы фильмов, места в кинотеатре которые имеют статус "бронь" и где film_id по условию < 5000

SQL запрос:
SELECT f.film_id FROM `film_rent`  as f
WHERE f.film_rent_id IN(SELECT fs.film_rent_id FROM film_schedule as fs WHERE fs.status = 2)
AND film_id < 5000

План:

id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	f	range	film_id	film_id	4	NULL	4703	Using where; Using index
2	DEPENDENT SUBQUERY	fs	index_subquery	film_rent_id	film_rent_id	4	func	186	Using where

7) 4.6. ORDER BY 1 атрибут
Текстовое описание какие данные хотим получить: 
сортировка фильмов по полю продолжительности < 70  минут

SQL запрос:
SELECT * 
FROM  `film` 
WHERE film_duration <70
ORDER BY film_id

План:

id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	film	range	film_duration	film_duration	4	NULL	1679	Using where; Using filesort

8) 4.7. ORDER BY 2 атрибуту
Получить id прокатов со статусом 'куплены', где номер брони мест < 1000, с сортировкой по ид места и film_rent_id

SQL:
SELECT film_rent_id, 
STATUS FROM  `film_schedule` 
WHERE STATUS =1
AND schedule_place_id < 1000
ORDER BY schedule_place_id ASC , film_rent_id DESC

План:

id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	film_schedule	range	PRIMARY,status	PRIMARY	4	NULL	998	Using where; Using filesort

